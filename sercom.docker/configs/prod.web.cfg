[global]
# This is where all of your settings go for your development environment
# Settings that are the same for both development and production
# (such as template engine, encodings, etc.) all go in
# sercom/config/app.cfg

# SERCOM

####################################
# Configuración recupero de password
sercom.passrecovery.mail_from = 'recovery@7542.fi.uba.ar'
# Tiempo mínimo entre dos mails a la misma dirección en minutos [15]
sercom.passrecovery.between_mails_delay = 15
sercom.passrecovery.send_username = True

# PANEL DE USUARIO

# Permitir cambio de nombre al usuario [False]
sercom.user_panel.name_readonly = True

# URL de RSS para página de inicio (vacio para no mostrar ningun feed)
sercom.welcome.rssfeed.url = ''

#comando para creación de PDF sobre el código fuente usando a2ps y ps2pdf
sercom.pdf.creation.commandtemplate = "/home/sercom/sercom_src/sercom/sanitize_charset.sh convert ; find -regextype posix-egrep -type f -regex '.*\.(h|c|cpp)' | sort -r | tac | xargs -- a2ps -q -2 -Av --toc --line-numbers=1 --tabsize=2 --header='[75.42] Taller de Programacion' --left-footer='%D{%c}' --footer='Padron ${alumno} (curso ${cuatrimestre})  Ejercicio ${ejercicio}.${instancia} (entrega ${fecha})' -g -o - | ps2pdf - ${pdf_filepath}"



# DATABASE

# pick the form for your database
# sqlobject.dburi="postgres://username@hostname/databasename"
# sqlobject.dburi="mysql://username:password@hostname:port/databasename"
# sqlobject.dburi="sqlite:///file_name_and_path"

# If you have sqlite, here's a simple default to get you started
# in development
sqlobject.dburi="mysql://<SERCOM_DB_USER>:<SERCOM_DB_PASS>@<MYSQL_SERVER>:<MYSQL_PORT>/<SERCOM_DB_NAME>?charset=utf8&sqlobject_encoding=utf8"


# if you are using a database or table type without transactions
# (MySQL default, for example), you should turn off transactions
# by prepending notrans_ on the uri
# sqlobject.dburi="notrans_mysql://username:password@hostname:port/databasename"

# for Windows users, sqlite URIs look like:
# sqlobject.dburi="sqlite:///drive_letter:/path/to/file"


# SERVER

# Nombre del host servidor
server.socket_host="0.0.0.0"

# Puerto para el host servidor
server.socket_port=8080

# Enable the production environment
environment="production"

# Enable the session variables
tools.sessions.on = True

# The session directory for catwalk
#catwalk.session-dir = "/var/lib/sercom/sercom/sercom/catwalk-session"

# Sets the number of threads the server uses
server.thread_pool = 20

# Set to True if you'd like to abort execution if a controller gets an
# unexpected parameter. False by default
tg.strict_parameters = True

# Configuración envío de mails
email.smtp_server = "smtp.fi.uba.ar"
email.from_addr = 'anonymous@7542.fi.uba.ar'


# LOGGING
# Logging configuration generally follows the style of the standard
# Python logging module configuration. Note that when specifying
# log format messages, you need to use *() for formatting variables.
# Deployment independent log configuration is in sercom/config/log.cfg
[logging]

[[handlers]]

[[[console_out]]]
args = "(sys.stdout,)"
class = 'StreamHandler'
level = 'WARNING'
formatter = 'full_content'

[[[mail_out]]]
# smtp, from, to, subject
args = "('turing', 'backend@7542.fi.uba.ar', ['pablodroca@gmail.com'], 'SERCOM ERROR!!!')"
class = 'handlers.SMTPHandler'
level = 'ERROR'
formatter = 'mail'

[[[file_out]]]
# set the filename as the first argument below
args = "('/var/log/sercom/sercom.web.log',None,10000000,4,)"
class = 'RotatingFileHandler'
level = 'INFO'
formatter = 'full_content'

[[[common_file_out]]]
# set the filename as the first argument below
args = "('/var/log/sercom/sercom.web.common.log',None,10000000,4,)"
class = 'RotatingFileHandler'
level = 'INFO'
formatter = 'full_content'

[[[access_file_out]]]
# set the filename as the first argument below
args = "('/var/log/sercom/sercom.web.access.log',None,10000000,4,)"
class = 'RotatingFileHandler'
level = 'INFO'
formatter = 'full_content'


[[loggers]]

[[[access]]]
qualname = 'cherrypy.access'
handlers = ['access_file_out']
propagate = 0

[[[sercom]]]
qualname = 'sercom'
handlers = ['file_out']

[[[error]]]
qualname = 'cherrypy.error'
handlers = ['access_file_out']

[[[allinfo]]]
#TODO: add mail_out
handlers = ['common_file_out', 'console_out']

